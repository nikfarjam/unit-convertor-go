name: Build Unit Converter API

on:
  pull_request:
  push:

jobs:

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        cache: 'true'  
    - name: Lint
      run: make lint
    - name: Test
      run: |
        make coverage-ci
        make coverage-codecov
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        cache: 'true'
    - name: Build
      run: make build

  docker-build-and-push:
    needs: ["code-quality", "build"]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    steps:
    - name: Set up Docker
      uses: docker/setup-docker-action@v4
      with:
        daemon-config: |
          {
            "debug": true,
            "features": {
              "containerd-snapshotter": true
            }
          }
    - name: Login to Docker Hub
      uses: docker/login-action@v3.5.0
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions/checkout@v5
    - name: Get Version
      id: get_version
      run: |
        image_name="${{ vars.DOCKER_HUB_REPOSITORY }}/unit-converter-api-lightweight"
        tags=""
        if [[ "${GITHUB_REF}" == refs/heads/develop ]]; then
          api_version="$(cat version)-alpha"
          echo "API_VERSION=$api_version" >> $GITHUB_ENV
          tags="${image_name}:${api_version}"
        elif [[ "${GITHUB_REF}" == refs/heads/main ]]; then
          api_version="$(cat version)"
          echo "API_VERSION=$api_version" >> $GITHUB_ENV
          tags="${image_name}:${api_version},${image_name}:latest"
        else
          echo "Not on develop or main branch."
          tags="${image_name}:test"
        fi
        echo "Tags to be pushed: ${tags}"
        echo "tags=${tags}" >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: ${{ env.tags }}

  tag-branch:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v5      
    - name: Tag branch
      run: |
        api_version="$(cat version)"
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag "${api_version}"
        git push origin "${api_version}"